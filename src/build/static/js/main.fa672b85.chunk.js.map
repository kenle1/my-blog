{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","components/ArticlesList.js","pages/article-content.js","pages/ArticlesListPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/NotFoundPage.js","pages/ArticlePage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","id","src","AboutPage","ArticlesList","articles","map","article","key","className","to","name","title","content","substring","ArticlesListPage","articleContent","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","NotFoundPage","ArticlePage","match","params","find","articleInfo","useEffect","console","log","fetchData","otherArticles","filter","paragraph","NavBar","App","path","component","exact","Component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa672b85.chunk.js","sourcesContent":["import React from 'react';\nimport './HomePage.css';\n\nconst HomePage = () => (\n    <div id = \"home\">\n    <>\n    <h1>Hello, welcome to my first Website!</h1>\n    <p>\n        Hello! My name is Ken Le and I am here to demonstrate my fitness motivation.\n        I started working out since I was 16. However I was just \"working out\" with\n        no real motivation. My only purpose was to look good and in the end it was not a \n        long term goal. My motivation to workout was lacking and fastforward 7 years, my body did \n        not change.\n    </p>\n    <p>\n        My motivation for fitness increased dramatically when I was 23. My desire to work out\n        was about the obsession of performing calisthenics moves. My body began to transform\n        as my obsession grew.\n        \n    </p>\n\n    </>\n    <img src=\"https://scontent-atl3-1.xx.fbcdn.net/v/t1.0-9/87165924_2795304797220928_454459272797880320_n.jpg?_nc_cat=108&_nc_sid=8024bb&_nc_oc=AQm84Qeor9Mnd58zwOQ9aMAlMYLNyn2dEGaQ-gtv_vPhhaM7B-mUzQZ2IwzmwXtVC9vnn0o2iZfDZbiFFRR6sIHf&_nc_ht=scontent-atl3-1.xx&oh=f2cfce79fbe5ac258200b72f5de4ab2b&oe=5E93713F\" />\n    </div>\n);\n\nexport default HomePage;","import React from 'react';\nimport './HomePage.css';\n\nconst AboutPage = () => (\n    \n    <>\n    \n    <h1>The Routine(1 min rest time)</h1>\n    <div id =\"about\">\n    <p>\n        Monday\n        <ul>\n        <li>30 second Jumping Jacks sets of 3.</li>\n        <li>Push ups: 4 sets of 10-15 reps</li>\n        <li>Australian pull ups: 4 sets of 10-15 reps</li>\n        <li>Body weight squats: 4 sets of 15 reps</li>\n        </ul>\n    </p>\n    <p>\n        Tuesday\n        <ul>\n        <li>Active Rest</li>\n        <li>However don't sit on your ass</li>\n        <li>Go for a walk</li>\n        <li>Move!</li>\n        </ul>\n    </p>\n    <p>\n        Wednesday\n        <ul>\n        <li>30 second Jumping Jacks sets of 3.</li>\n        <li>Push ups: 4 sets of 10-15 reps</li>\n        <li>Australian pull ups: 4 sets of 10-15 reps</li>\n        <li>Body weight squats: 4 sets of 15 reps</li>\n        </ul>\n    </p>\n    <p>\n        Thursday\n        <ul>\n        <li>Active Rest</li>\n        <li>Walk/Run</li>\n        <li>Yoga</li>\n        <li>Active Rest</li>\n        </ul>\n    </p>\n    <p>\n        Friday\n        <ul>\n        <li>30 second Jumping Jacks sets of 3.</li>\n        <li>Push ups: 4 sets of 10-15 reps</li>\n        <li>Australian pull ups: 4 sets of 10-15 reps</li>\n        <li>Body weight squats: 4 sets of 15 reps</li>\n        </ul>\n    </p>\n    <p>\n        Saturday\n        <ul>\n        <li>Active Rest</li>\n        <li>Eat healthy</li>\n        <li>Yoga</li>\n        <li>Walk the dog</li>\n        </ul>\n    </p>\n    <p>\n        Sunday\n        <ul>\n        <li>Rest maybe</li>\n        <li>Maybe Not</li>\n        \n        <li>Yoga</li>\n        </ul>\n    </p>\n    </div>\n  \n\n    \n   \n    </>\n   \n);\n\nexport default AboutPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ArticlesList = ({ articles }) => (\n    <>\n    {articles.map((article, key) => (\n        <Link className=\"article-list-item\" key={key} to={`/article/${article.name}`}>\n            <h3>{article.title}</h3>\n            <p>{article.content[0].substring(0, 150)}...</p>\n        </Link>\n    ))}\n    </>\n);\n\nexport default ArticlesList;","const articles = [\n    {\n        name: 'excercise',\n        title: 'Excercise',\n        content: [\n            `Keep the routine CONSISTENT and you will see changes within the first month. After you\n            see those results, it will become life changing!`,\n            `It is important that you listen to your body! If it is aching, then take a day off.\n            If not, then go ham on those excercises! Listen to the body and not the schedule, however try\n            to follow the schedule. Overtime your body will adapt and these excercieses will be too easy\n            for you! When you are ready for the next level, contact me if you wish to proceed further!`,\n            \n        ]\n    },    {\n        name: 'eat',\n        title: 'Eat Healthy',\n        content: [\n            `Health means, no processed foods! Cut out the fast food such as burgers, french fries, pizza, fried foods, sweets, and bread.\n            Healthy means organic foods. Foods that are grown from the earth! Such as veggies, fruits, nuts, grains, and some animal products.\n            The mind might go crazy if it is only fed with healthy, not as great tasting junkfood! Eating 80-90 percent healthy and 10-20 percent\n            junk food is also fine! Those cheat days will feel amazing considering how much your body wants it everyday! \n            Props to you if you can go 100 percent healthy, because that takes extreme mental toughness! `,\n        ]\n    },     {\n        name: 'sleep',\n        title: 'Sleep',\n        content: [\n            `Sleep is the most important factor for muscle growth. Muscles are torn and shreded during\n            a workout. You workout to beat up your muscles. With sleep, you repair the muscle tissues\n            making it to come back stronger!`,\n            `Sleep should be a prioty! Priotize 8 hours of sleep if you can. With enough sleep, you will\n            grow and be able to function properly.`,\n            `Sleep like a baby! Sleep are for the ones willing to get stronger.`,\n        ]\n    },  \n];\n\nexport default articles;","import React from 'react';\nimport ArticlesList from '../components/ArticlesList';\nimport articleContent from './article-content';\n\nconst ArticlesListPage = () => (\n    <>\n    <h1>Articles</h1>\n    <ArticlesList articles={articleContent} />\n    </>\n);\n\nexport default ArticlesListPage;","import React from 'react';\n\nconst CommentsList = ({ comments }) => (\n    <>\n    <h3>Comments:</h3>\n    {comments.map((comment, key) => (\n        <div className=\"comment\" key={key}>\n            <h4>{comment.username}</h4>\n            <p>{comment.text}</p>\n        </div>\n    ))}\n    </>\n);\n\nexport default CommentsList;","import React from 'react';\n\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo }) => {\n    const upvoteArticle = async () => {\n        const result = await fetch(`/api/articles/${articleName}/upvote`, {\n            method: 'post',\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n    }\n    return (\n        <div id=\"upvotes-section\">\n            <button onClick={() => upvoteArticle()}>Add Upvote</button>\n            <p>This post has been upvoted {upvotes} times</p>\n        </div>\n    );\n}\n\nexport default UpvotesSection;","import React, { useState } from 'react';\n\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\n    const [username, setUsername] = useState('');\n    const [commentText, setCommentText] = useState('');\n\n    const addComment = async () => {\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n            method: 'post',\n            body: JSON.stringify({ username, text: commentText }),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n        setUsername('');\n        setCommentText('');\n    }\n\n    return (\n        <div id=\"add-comment-form\">\n            <h3>Add a Comment</h3>\n            <label>\n                Name:\n                <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\n            </label>\n            <label>\n                Comment:\n                <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)} />\n            </label>\n            <button onClick={() => addComment()}>Add Comment</button>\n        </div>\n    );\n}\n\nexport default AddCommentForm;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n    <h1>404: Page Not Found</h1>\r\n);\r\n\r\nexport default NotFoundPage;","import React, { useState, useEffect } from 'react';\nimport ArticlesList from '../components/ArticlesList';\nimport CommentsList from '../components/CommentsList';\nimport UpvotesSection from '../components/UpvotesSection';\nimport AddCommentForm from '../components/AddCommentForm';\nimport NotFoundPage from './NotFoundPage';\nimport articleContent from './article-content';\n\nconst ArticlePage = ({ match }) => {\n    const name = match.params.name;\n    const article = articleContent.find(article => article.name === name);\n\n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch(`/api/articles/${name}`);\n            const body = await result.json();\n            console.log(body);\n            setArticleInfo(body);\n        }\n        fetchData();\n    }, [name]);\n\n    if (!article) return <NotFoundPage />\n\n    const otherArticles = articleContent.filter(article => article.name !== name);\n\n    return (\n        <>\n        <h1>{article.title}</h1>\n        <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo}/>\n        {article.content.map((paragraph, key) => (\n            <p key={key}>{paragraph}</p>\n        ))}\n        <CommentsList comments={articleInfo.comments} />\n        <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\n        <h3>Other Articles:</h3>\n        <ArticlesList articles={otherArticles} />\n        </>\n    );\n}\n\nexport default ArticlePage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = () => (\n    <nav>\n        <ul>\n            <li>\n                <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n                <Link to=\"/about\">How To Begin</Link>\n            </li>\n            <li>\n                <Link to=\"/articles-list\">Helpful Information</Link>\n            </li>\n        </ul>\n    </nav>\n);\n\nexport default NavBar;","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport ArticlePage from './pages/ArticlePage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport NavBar from './NavBar';\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <div id=\"page-body\">\n            <Switch>\n              <Route path=\"/\" component={HomePage} exact />\n              <Route path=\"/about\" component={AboutPage} />\n              <Route path=\"/articles-list\" component={ArticlesListPage} />\n              <Route path=\"/article/:name\" component={ArticlePage} />\n              <Route component={NotFoundPage} />\n\n            </Switch>\n            \n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}